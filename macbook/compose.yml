services:
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: macbook_mosquitto
    ports:
      - "1883:1883"
      - "1884:1884"
    volumes:
      - ../infra/mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  aggregator:
    build:
      context: ../services/aggregator
    container_name: macbook_aggregator
    depends_on:
      mosquitto:
        condition: service_healthy
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - HOUSE_ID=${HOUSE_ID:-houseA}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  ui:
    build:
      context: ../services/ui
    container_name: macbook_ui
    depends_on:
      mosquitto:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  audio_bridge:
    build:
      context: ../services/audio_bridge
    container_name: macbook_audio_bridge
    depends_on:
      mosquitto:
        condition: service_healthy
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - HOUSE_ID=${HOUSE_ID:-houseA}
      - WHISPER_URL=${WHISPER_URL}
      - WHISPER_MODEL=${WHISPER_MODEL:-tiny-int8}
      - WHISPER_LANGUAGE=${WHISPER_LANGUAGE:-en}
      - AUDIO_DEVICE_INDEX=${AUDIO_DEVICE_INDEX:-0}
      - AUDIO_SAMPLE_RATE=${AUDIO_SAMPLE_RATE:-16000}
      - AUDIO_CHUNK_DURATION_MS=${AUDIO_CHUNK_DURATION_MS:-3000}
      - AUDIO_SILENCE_THRESHOLD=${AUDIO_SILENCE_THRESHOLD:-500}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    restart: unless-stopped
    # Note: Audio device access will be handled via host networking or device mounting
    network_mode: host
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  llm_agent:
    build:
      context: ../services/llm_agent
    container_name: macbook_llm_agent
    depends_on:
      mosquitto:
        condition: service_healthy
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - HOUSE_ID=${HOUSE_ID:-houseA}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - LLM_MODEL=${LLM_MODEL:-gpt-3.5-turbo}
      - OBSERVATION_INTERVAL_MIN=${OBSERVATION_INTERVAL_MIN:-2}
      - OBSERVATION_INTERVAL_MAX=${OBSERVATION_INTERVAL_MAX:-5}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    name: whispering-machine-macbook
